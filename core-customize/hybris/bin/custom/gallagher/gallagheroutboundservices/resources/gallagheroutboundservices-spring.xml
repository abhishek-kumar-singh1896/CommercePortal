<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean id="gallagheroutboundservicesSystemSetup"
		class="com.gallagher.outboundservices.setup.GallagheroutboundservicesSystemSetup">
		<!-- constructor arg injection example -->
		<constructor-arg ref="gallagheroutboundservicesService" />
	</bean>

	<bean id="gallagheroutboundservicesService"
		class="com.gallagher.outboundservices.service.impl.DefaultGallagheroutboundservicesService">
		<!-- setter injection example -->
		<property name="modelService" ref="modelService" />
		<property name="mediaService" ref="mediaService" />
		<property name="flexibleSearchService" ref="flexibleSearchService" />
	</bean>

	<bean id="gallagherC4COutboundServiceFacade"
		class="com.gallagher.c4c.outboundservices.facade.impl.GallagherC4COutboundServiceFacadeImpl"
		parent="defaultOutboundServiceFacade" />

	<bean id="gallagherSovosService" class="com.gallagher.sovos.outboundservices.service.impl.GallagherSovosServiceImpl" />

	<bean id="gallagherKeycloakService"
		class="com.gallagher.keycloak.outboundservices.service.impl.GallagherKeycloakServiceImpl" />

	<!-- SAP CPI Outbound Service -->
	<alias name="gallagherSCPIOutboundService" alias="sapCpiOutboundService" />
	<bean id="gallagherSCPIOutboundService"
		class="com.gallagher.sap.sapcpiadapter.service.impl.GallagherSCPIOutboundServiceImpl" parent="sapCpiDefaultOutboundService" />

	<!-- Send Outbound Customer Service -->
	<alias name="gallagherSCPICustomerOutboundService" alias="customerExportService" />
	<bean id="gallagherSCPICustomerOutboundService"
		class="com.gallagher.sap.sapcpicustomerexchange.service.impl.GallagherSCPICustomerOutboundService"
		parent="sapCpiCustomerOutboundService" />

	<!-- Outbound B2BCustomer Conversion Service -->
	<alias name="gallagherSCPIB2BCustomerConversionService" alias="sapCpiB2BCustomerConversionService" />
	<bean id="gallagherSCPIB2BCustomerConversionService"
		class="com.gallagher.sap.sapcpicustomerexchangeb2b.outbound.services.impl.GallagherSCPIB2BCustomerConversionServiceImpl"
		parent="sapCpiB2BCustomerDefaultConversionService" />


	<!-- action to trigger the sap consumer -->
	<alias alias="customerPublishAction" name="gallagherCustomerPublishAction" />
	<bean id="gallagherCustomerPublishAction" class="com.gallagher.sapcustomerb2c.outbound.GallagherCustomerPublishAction"
		parent="defaultCustomerPublishAction" />


	<bean id="gallagherCsrfOutboundRequestDecorator"
		class="com.gallagher.outboundservices.decorator.impl.GallagherCsrfOutboundRequestDecoratorImpl">
		<property name="integrationRestTemplateFactory" ref="integrationRestTemplateFactory" />
		<property name="cache" ref="csrfParametersCache" />
	</bean>

	<alias name="gallagherSapSalesConditionsContributor" alias="sapSalesConditionsContributor" />
	<bean id="gallagherSapSalesConditionsContributor"
		class="com.gallagher.sap.orderexchange.outbound.impl.GallagherSalesConditionsContributor"
		parent="defaultSapSalesConditionsContributor" />

	<alias name="gallagherSapOrderEntryContributor" alias="sapOrderEntryContributor" />
	<bean id="gallagherSapOrderEntryContributor"
		class="com.gallagher.sap.orderexchange.outbound.impl.GallagherOrderEntryContributor" parent="defaultSapOrderEntryContributor" />

	<alias name="gallagherBuildPayloadRequestDecorator" alias="buildPayloadRequestDecorator" />
	<bean id="gallagherBuildPayloadRequestDecorator"
		class="com.gallagher.outboundservices.decorator.impl.GallagherPayloadBuildingRequestDecorator"
		parent="defaultBuildPayloadRequestDecorator">
		<property name="integrationObjectService" ref="integrationObjectService"/>
	</bean>

	<!-- register an address interceptor to trigger the sap consumer export -->
	<bean id="gallagherAddressInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="gallagherAddressInterceptor" />
		<property name="typeCode" value="Address" />
	</bean>

	<bean id="gallagherAddressInterceptor" class="com.gallagher.outboundservices.interceptors.GallagherAddressInterceptor" autowire="byName">
		<property name="baseStoreService" ref="baseStoreService" />
		<property name="customerAddressReplicationUtilityService" ref="customerAddressReplicationUtilityService" />
		<property name="gallagherSovosService" ref="gallagherSovosService"/>
	</bean>
</beans>
