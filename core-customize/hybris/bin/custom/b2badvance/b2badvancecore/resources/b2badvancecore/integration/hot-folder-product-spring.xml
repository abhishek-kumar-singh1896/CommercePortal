<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/integration
        http://www.springframework.org/schema/integration/spring-integration.xsd
        http://www.springframework.org/schema/integration/file
        http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean id="importConfig" class="de.hybris.platform.servicelayer.impex.ImportConfig" scope="prototype">
		<property name="removeOnSuccess" value="false" />
		<property name="failOnError" value="false" />
		<property name="synchronous" value="true" />
		<property name="legacyMode" value="false" />
		<property name="maxThreads" value="#{configurationService.configuration.getProperty('acceleratorservices.batch.impex.max-threads')}" />
		<property name="locale" value="en"/>
	</bean>

	<!-- Batch Transformer Task - Transforms the CSV into impex -->
	<bean id="b2badvanceProductBatchTransformerTask"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.task.ImpexTransformerTask"
		init-method="initConvertersMap">
		<property name="fieldSeparator" value=";" />
		<property name="encoding" value="UTF-8" />
		<property name="linesToSkip" value="1" />
		<property name="cleanupHelper" ref="cleanupHelper" />
	</bean>

	<bean id="b2badvanceProductBatchRunnerTask"
		class="com.enterprisewide.b2badvance.core.integration.task.B2BAdvanceAbstractImpexRunnerTask">
		<property name="sessionService" ref="sessionService" />
		<property name="importService" ref="importService" />
		<lookup-method name="getImportConfig" bean="importConfig" />
	</bean>


	<bean id="baseDirectoryProduct" class="java.lang.String">
		<constructor-arg value="#{baseDirectory}/${tenantId}/b2badvance/product" />
	</bean>

	<file:inbound-channel-adapter id="batchb2badvanceProduct"
		directory="#{baseDirectoryProduct}" filename-regex="^b2badvanceProduct-(\d+)\.csv"
		comparator="fileOrderComparator">
		<int:poller fixed-rate="1000" />
	</file:inbound-channel-adapter>
	
	<file:inbound-channel-adapter id="batchb2badvanceCategory"
		directory="#{baseDirectoryProduct}" filename-regex="^b2badvanceCategory-(\d+)\.csv"
		comparator="fileOrderComparator">
		<int:poller fixed-rate="1000" />
	</file:inbound-channel-adapter>
	
	<file:inbound-channel-adapter id="batchb2badvanceVariant"
		directory="#{baseDirectoryProduct}" filename-regex="^b2badvanceVariant-(\d+)\.csv"
		comparator="fileOrderComparator">
		<int:poller fixed-rate="1000" />
	</file:inbound-channel-adapter>

	<file:outbound-gateway request-channel="batchb2badvanceProduct" 
		reply-channel="batchb2badvanceProductProc" directory="#{baseDirectoryProduct}/processing"
		delete-source-files="true" />
		
	<file:outbound-gateway request-channel="batchb2badvanceCategory"
		reply-channel="batchb2badvanceCategoryProc" directory="#{baseDirectoryProduct}/processing"
		delete-source-files="true" />	
	<file:outbound-gateway request-channel="batchb2badvanceVariant"
		reply-channel="batchb2badvanceVariantProc" directory="#{baseDirectoryProduct}/processing"
		delete-source-files="true" />	
		

	<int:service-activator input-channel="batchb2badvanceProductProc"
		output-channel="batchb2badvanceProductHeaderInit" ref="b2badvanceProductHeaderSetupTask"
		method="execute" />
	<int:service-activator input-channel="batchb2badvanceCategoryProc"
		output-channel="batchb2badvanceCategoryHeaderInit" ref="b2badvanceProductHeaderSetupTask"
		method="execute" />
	<int:service-activator input-channel="batchb2badvanceVariantProc"
		output-channel="batchb2badvanceVariantHeaderInit" ref="b2badvanceProductHeaderSetupTask"
		method="execute" />		

	<int:service-activator input-channel="batchb2badvanceProductHeaderInit"
		output-channel="batchb2badvanceProductHeader" ref="headerInitTask" method="execute" />
	<int:service-activator input-channel="batchb2badvanceCategoryHeaderInit"
		output-channel="batchb2badvanceCategoryHeader" ref="headerInitTask" method="execute" />	
	<int:service-activator input-channel="batchb2badvanceVariantHeaderInit"
		output-channel="batchb2badvanceVariantHeader" ref="headerInitTask" method="execute" />	

	<int:service-activator input-channel="batchb2badvanceProductHeader"
		output-channel="batchb2badvanceProductHeaderTran" ref="b2badvanceProductBatchTransformerTask"
		method="execute" />
	<int:service-activator input-channel="batchb2badvanceCategoryHeader"
		output-channel="batchb2badvanceCategoryHeaderTran" ref="b2badvanceProductBatchTransformerTask"
		method="execute" />
	<int:service-activator input-channel="batchb2badvanceVariantHeader"
		output-channel="batchb2badvanceVariantHeaderTran" ref="b2badvanceProductBatchTransformerTask"
		method="execute" />		

	<int:service-activator input-channel="batchb2badvanceProductHeaderTran"
		output-channel="batchb2badvanceProductHeaderImp" ref="b2badvanceProductBatchRunnerTask"
		method="execute" />
	<int:service-activator input-channel="batchb2badvanceCategoryHeaderTran"
		output-channel="batchb2badvanceProductHeaderImp" ref="b2badvanceProductBatchRunnerTask"
		method="execute" />	
	<int:service-activator input-channel="batchb2badvanceVariantHeaderTran"
		output-channel="batchb2badvanceProductHeaderImp" ref="b2badvanceProductBatchRunnerTask"
		method="execute" />	

	<int:service-activator input-channel="batchb2badvanceProductHeaderImp"
		ref="batchCleanupTask" method="execute" />

	<bean id="b2badvanceProductHeaderSetupTask"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.task.HeaderSetupTask">
		<property name="catalog" value="powertoolsProductCatalog" />
		<property name="storeBaseDirectory" ref="baseDirectoryProduct" />
		<property name="net" value="true"></property>
	</bean>

	<!-- Batch Product Mapping - Mapping for converters and respective header 
		beans -->
	<bean id="batchb2badvanceProductMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="b2badvanceProduct" p:converter-ref="b2badvanceProductConverter" />
		
	<bean id="batchb2badvanceCategoryMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="b2badvanceCategory" p:converter-ref="b2badvanceCategoryConverter" />
	
	<bean id="batchb2badvanceVariantMapping"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="b2badvanceVariant" p:converter-ref="b2badvanceVariantConverter" />		

	<!-- Batch Product Converter - Header Beans to be applied for converters -->
	<bean id="defaultImpexProductHeader" class="java.lang.String">
		<constructor-arg>
			<value># ImpEx for importing data into $CATALOG$
				$catalogVersion=catalogversion(catalog(id[default=$CATALOG$]),version[default='Staged'])[unique=true]
				$supercategories=supercategories(code, $catalogVersion)
				$approved=approvalstatus(code)[default='check']
				$lang=$LANGUAGE$</value>
		</constructor-arg>
	</bean>
	<bean id="b2badvanceProductConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value># Insert Product
			#{defaultImpexProductHeader}
				INSERT_UPDATE Product;code[unique=true];name[lang=$lang];description[lang=$lang];summary[lang=$lang];shortDescription[lang=$lang];partNumber;$supercategories;$approved;$catalogVersion;variantType(code)
				
			</value>
		</property>
		<property name="impexRow">
			<value>
				;{+0};{1};{2};{3};{4};{5};{6};{7};{8};{9};{10}
			</value>
		</property>
		<property name="type" value="Product" />
	</bean>
	
	<bean id="b2badvanceCategoryConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value># Insert Category
			#{defaultImpexProductHeader}
			    INSERT_UPDATE Category;code[unique=true];name[lang=$lang];description[lang=$lang];$supercategories;order;$catalogVersion;;allowedPrincipals(uid)[default='customergroup']
				
			</value>
		</property>
		<property name="impexRow">
			<value>
				;{+0};{1};{2};{3};{4}
			</value>
		</property>
		<property name="type" value="Category" />
	</bean>
	
	<bean id="b2badvanceVariantConverter"
		class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value># Insert Variant(Generic)
			$catalogVersion=catalogversion(catalog(id[default=$CATALOG$]),version[default='Staged'])[unique=true]
			$supercategories=supercategories(code, $catalogVersion)
			$lang=$LANGUAGE$
			$approved=approvalstatus(code)[default='approved']
			$baseProduct=baseProduct(code,$catalogVersion)
			INSERT_UPDATE B2badvanceSizeVariantProduct;$baseProduct;code[unique=true];name[lang=$lang];description[lang=$lang];$supercategories;size[lang=$lang];$catalogVersion;$approved
			</value>
		</property>
		<property name="impexRow">
			<value>
				;{0};{+1};{2};{3};{4};{5}
			</value>
		</property>
		<property name="type" value="Variant" />
	</bean>

</beans>